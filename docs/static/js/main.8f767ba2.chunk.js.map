{"version":3,"sources":["components/addCategoria.js","components/GifItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategoria","useState","inputVlue","setInputVlue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifItem","title","url","className","src","alt","GifGrid","categoria","useEffect","getGifs","data","loading","gif","setGif","a","URL","encodeURI","fetch","then","response","json","gifs","map","img","id","images","downsized_medium","useFetchGif","GifExpertApp","c","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACZC,mBAAS,IADG,mBACvCC,EADuC,KAC5BC,EAD4B,KAa9C,OACI,sBAAMC,SATU,SAACC,GACjBA,EAAEC,iBACEJ,EAAUK,OAAOC,OAAS,IAC1BR,GAAa,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACnCN,EAAa,MAKjB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAWU,SAbvB,SAACP,GACnBF,EAAaE,EAAEQ,OAAOF,a,+BCHjBG,EAAU,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC7B,OACI,sBAAKC,UAAU,oDAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,QCFHK,EAAU,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,ECHf,SAACA,GAExBC,qBAAU,WACNC,MAED,CAACF,IALkC,MAOhBpB,mBAAS,CAC3BuB,KAAM,GACNC,SAAS,IATyB,mBAO/BC,EAP+B,KAO1BC,EAP0B,KAYhCJ,EAAO,uCAAG,kCAAAK,EAAA,6DACNC,EADM,iDAC0CC,UAAUT,GADpD,+DAEWU,MAAMF,GAAKG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFhD,gBAEJV,EAFI,EAEJA,KACFW,EAAOX,EAAKY,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRvB,MAAOsB,EAAItB,MACXC,IAAKqB,EAAIE,OAAOC,iBAAiBxB,QAGzCW,EAAO,CACHH,KAAMW,EACNV,SAAS,IAZD,2CAAH,qDAkBb,OAAOC,EDJ2Be,CAAYpB,GAAhCkB,EAvBwB,EAuB9Bf,KAAcC,EAvBgB,EAuBhBA,QAEtB,OACI,qCACI,6BAAKJ,IACJI,EAAU,4CAAqB,KAChC,qBAAKR,UAAU,YAAf,SAGQsB,EAAOH,KAAI,SAAAC,GACP,OACI,cAAC,EAAD,eAA0BA,GAAZA,EAAIC,aElCjCI,EAAe,WAAO,IAAD,EACIzC,mBAAS,CAAC,qBADd,mBACvBoB,EADuB,KACZrB,EADY,KAG9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAcA,aAAcA,IAC5B,uBAEA,6BAEQqB,EAAUe,KAAI,SAAAO,GAAC,OACX,cAAC,EAAD,CAAiBtB,UAAWsB,GAAdA,YCVtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8f767ba2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategoria = ({ setCategoria }) => {\r\n    const [inputVlue, setInputVlue] = useState('')\r\n    const cambioDeValor = (e) => {\r\n        setInputVlue(e.target.value)\r\n    }\r\n    const enviarValor = (e) => {\r\n        e.preventDefault()\r\n        if (inputVlue.trim().length > 2) {\r\n            setCategoria(cat => [inputVlue, ...cat])\r\n            setInputVlue('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={enviarValor}>\r\n            <input type=\"text\" value={inputVlue} onChange={cambioDeValor} />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n    setCategoria: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__lightSpeedInRight\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif'\r\nimport { GifItem } from './GifItem'\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n    //ec0hfEqDRQJwl8Uk1TocAiIbu0S20Cna\r\n    /*\r\n        const [imagenes, setImagenes] = useState([])\r\n    \r\n        useEffect(() => {\r\n            getGifs()\r\n        }, [categoria])\r\n    \r\n        const getGifs = async () => {\r\n            const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=ec0hfEqDRQJwl8Uk1TocAiIbu0S20Cna`\r\n            const { data } = await fetch(URL).then(response => response.json())\r\n            const gifs = data.map(img => {\r\n                return {\r\n                    id: img.id,\r\n                    title: img.title,\r\n                    url: img.images.downsized_medium.url\r\n                }\r\n            })\r\n            setImagenes(gifs)\r\n        }\r\n        */\r\n\r\n    const { data: images, loading } = useFetchGif(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h3>{categoria}</h3>\r\n            {loading ? <p>Cargando...</p> : null}\r\n            <div className=\"card-grid\">\r\n                {\r\n\r\n                    images.map(img => {\r\n                        return (\r\n                            <GifItem key={img.id} {...img} />\r\n                        )\r\n                    }\r\n\r\n                    )\r\n\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nexport const useFetchGif = (categoria) => {\r\n\r\n    useEffect(() => {\r\n        getGifs();\r\n\r\n    }, [categoria]) \r\n\r\n    const [gif, setGif] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    const getGifs = async () => {\r\n        const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=ec0hfEqDRQJwl8Uk1TocAiIbu0S20Cna`\r\n        const { data } = await fetch(URL).then(response => response.json())\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images.downsized_medium.url\r\n            }\r\n        })\r\n        setGif({\r\n            data: gifs,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    return gif;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategoria } from './components/addCategoria'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categoria, setCategoria] = useState(['Hora de aventura'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategoria setCategoria={setCategoria} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categoria.map(c => (\r\n                        <GifGrid key={c} categoria={c} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { GifExpertApp } from './GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}